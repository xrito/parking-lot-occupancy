name: parking
services:
  mongo:
    image: mongo:latest
    restart: always
    container_name: mongo
    volumes:
      - mongo:/data/db/
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
  redis:
    image: redis:latest
    restart: always
    container_name: redis
  http:
    build:
      context: .
      target: frontend
    volumes:
        - caddy_data:/data
        - caddy_config:/config
    environment:
      MERCURE_PUBLISHER_JWT_KEY: ${MERCURE_JWT_SECRET}
      MERCURE_SUBSCRIBER_JWT_KEY: ${MERCURE_JWT_SECRET}
    depends_on:
      - backend
    ports:
      - 80:80
    restart: unless-stopped
    container_name: frontend
  deepstack:
    image: 'deepquestai/deepstack:gpu'
    environment:
      - VISION-DETECTION=True
    container_name: deepstack
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
  camera:
    build:
      context: .
      target: camera
    container_name: camera
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - FFSERVER_PORT=${FFSERVER_PORT}
      - MESSENGER_TRANSPORT_DSN=${MESSENGER_TRANSPORT_DSN}
  backend:
    hostname: 'backend'
    build:
      context: .
      target: backend
    container_name: backend
    restart: always
    environment:
      - APP_ENV=prod
      - VISION_API=${VISION_API}
      - SNAPSHOT_API=${SNAPSHOT_API}
      - APP_SECRET=${APP_SECRET}
      - MERCURE_JWT_SECRET=${MERCURE_JWT_SECRET}
      - MERCURE_URL=${MERCURE_URL}
      - MERCURE_PUBLIC_URL=${MERCURE_PUBLIC_URL}
      - MONGODB_URL=${MONGODB_URL}
      - MONGODB_DB=${MONGODB_DB}
      - MESSENGER_TRANSPORT_DSN=${MESSENGER_TRANSPORT_DSN}
volumes:
  caddy_data:
  caddy_config:
  mongo:
